name: Auto Create Release Branch

on:
  push:
    branches: [stage]

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get version from latest release
        id: version
        run: |
          # Get latest release version, or start with v0.1.0 if none exists
          LATEST_VERSION=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' 2>/dev/null || echo "v0.0.0")
          
          # Parse version numbers
          if [[ $LATEST_VERSION =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
          else
            MAJOR=0
            MINOR=1
            PATCH=0
          fi
          
          # Increment minor version (you can change this logic as needed)
          MINOR=$((MINOR + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.0"
          
          echo "current_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release branch
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          BRANCH_NAME="release/$NEW_VERSION"
          
          # Create and push release branch
          git checkout -b $BRANCH_NAME stage
          git push origin $BRANCH_NAME
          
          echo "âœ… Created release branch: $BRANCH_NAME"
          echo "ðŸŽ¯ Ready for release: $NEW_VERSION"
          echo "ðŸ‘‰ Push this branch wherever you want!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}